# PDF AUTO to CN,谷歌翻译，翻译质量也一般
!pip install googletrans==4.0.0-rc1 python-pptx tqdm -q

from google.colab import files
from pptx import Presentation
from pptx.util import Pt
from googletrans import Translator
from tqdm import tqdm
import time

# 初始化谷歌翻译
translator = Translator(service_urls=['translate.google.com'])

def translate_text(text, max_retries=3):
    if not text.strip():
        return text
    for attempt in range(max_retries):
        try:
            result = translator.translate(text, src='auto', dest='zh-cn')
            time.sleep(0.5)  # 限速，防止被封
            return result.text
        except Exception as e:
            print(f"翻译失败，重试 {attempt+1}/{max_retries}，错误: {e}")
            time.sleep(1)  # 等待再试
    print("多次翻译失败，返回原文。")
    return text

# 上传PPTX文件
uploaded = files.upload()
input_ppt_path = list(uploaded.keys())[0]

# 加载PPT
prs = Presentation(input_ppt_path)

print("开始翻译PPT内容...")

total_slides = len(prs.slides)
for slide_idx, slide in enumerate(tqdm(prs.slides, desc="翻译幻灯片", unit="页"), start=1):
    print(f"\n➡️ 正在翻译第 {slide_idx}/{total_slides} 页幻灯片")
    paragraphs = []
    for shape in slide.shapes:
        if shape.has_text_frame:
            paragraphs.extend(shape.text_frame.paragraphs)
    for para in tqdm(paragraphs, desc=f"幻灯片 {slide_idx} 段落翻译", leave=False, unit="段"):
        orig_text = para.text
        translated = translate_text(orig_text)
        para.text = translated
        for run in para.runs:
            run.font.size = Pt(14)

output_ppt = "translated_output.pptx"
prs.save(output_ppt)

print("\n✅ 翻译完成，准备下载...")
files.download(output_ppt)
