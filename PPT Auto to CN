# PPT auto to CN，表格可翻译，字体统一
# 安装依赖
!pip install googletrans==4.0.0-rc1 python-pptx tqdm easyocr -q
!apt install poppler-utils -y

import time
from google.colab import files
from pptx import Presentation
from pptx.util import Pt
from googletrans import Translator
from tqdm import tqdm
import easyocr
from PIL import Image
import io
import numpy as np

translator = Translator(service_urls=['translate.google.com'])
reader = easyocr.Reader(['en', 'ch_sim'], gpu=False)

# 翻译函数
def translate_text(text, max_retries=3):
    if not text.strip():
        return text
    for attempt in range(max_retries):
        try:
            result = translator.translate(text, src='auto', dest='zh-cn')
            time.sleep(0.5)
            return result.text
        except Exception as e:
            print(f"翻译失败，重试 {attempt+1}/{max_retries}：{e}")
            time.sleep(1)
    return text

# 上传文件
uploaded = files.upload()
input_ppt_path = list(uploaded.keys())[0]

# 加载PPT
prs = Presentation(input_ppt_path)
print("开始翻译并继承默认字体...")

for slide_idx, slide in enumerate(tqdm(prs.slides, desc="处理幻灯片", unit="页"), start=1):
    for shape in slide.shapes:

        # 文本框
        if shape.has_text_frame:
            try:
                default_font_name = shape.text_frame.text_frame_format.default_font
            except:
                default_font_name = None

            for para in shape.text_frame.paragraphs:
                new_text = translate_text(para.text)
                for run in para.runs:
                    orig_font_size = run.font.size
                    run.text = new_text
                    if orig_font_size:
                        run.font.size = orig_font_size
                    if default_font_name:
                        run.font.name = default_font_name

        # 表格
        elif shape.shape_type == 19:
            table = shape.table
            for row in table.rows:
                for cell in row.cells:
                    original = cell.text
                    translated = translate_text(original)
                    cell.text = translated
                    for para in cell.text_frame.paragraphs:
                        for run in para.runs:
                            run.font.size = Pt(12)
                            run.font.name = "微软雅黑"

        # 图像 OCR
        #elif shape.shape_type == 13:
            try:
                image = shape.image
                img = Image.open(io.BytesIO(image.blob)).convert("RGB")
                ocr_texts = reader.readtext(np.array(img), detail=0)
                full_text = "\n".join(ocr_texts)
                if full_text.strip():
                    translated = translate_text(full_text)
                    left = shape.left
                    top = shape.top + shape.height + Pt(5)
                    width = shape.width
                    height = Pt(60)
                    textbox = slide.shapes.add_textbox(left, top, width, height)
                    tf = textbox.text_frame
                    tf.text = translated
                    for para in tf.paragraphs:
                        for run in para.runs:
                            run.font.size = Pt(14)
                            run.font.name = "微软雅黑"
            except Exception as e:
                print(f"图像OCR处理失败：{e}")

# 保存
output_ppt = "translated_keep_default_font.pptx"
prs.save(output_ppt)
print("✅ 翻译完成，正在下载...")
files.download(output_ppt)
